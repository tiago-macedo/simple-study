{"ast":null,"code":"import axios from \"axios\";\nexport default class APIService {\n  constructor() {\n    if (process.env.NODE_ENVIRONMENT === \"product\") {\n      this.baseURL = \"<PRODUCTION URL>\";\n    } else {\n      this.baseURL = \"http://localhost:5000/api\";\n    }\n  }\n\n  async signUp(email, password) {\n    try {\n      const url = `${this.baseURL}/auth/sign-up`;\n      const reqBody = {\n        email,\n        password\n      };\n      const res = await axios.post(url, reqBody);\n      console.log(res.status, res.statusText, res.data);\n\n      if (res.status === 200) {\n        return true;\n      }\n    } catch (err) {\n      if (err.res) {\n        const res = err.res;\n        console.log(res.status, res.statusText, res.data);\n      }\n    }\n\n    return false;\n  }\n\n  async signIn(email, password) {\n    try {\n      const url = `${this.baseURL}/auth/signIn`;\n      const reqBody = {\n        email,\n        password\n      };\n      const res = await axios.get(url, {\n        params: {\n          email,\n          password\n        }\n      });\n      console.log(res.status, res.statusText, res.data);\n\n      if (res.status === 200) {\n        return true;\n      }\n    } catch (err) {\n      if (err.res) {\n        const res = err.res;\n        console.log(res.status, res.statusText, res.data);\n      }\n    }\n\n    return false;\n  }\n\n}","map":{"version":3,"sources":["/home/rseusebio/Codes/FES/simple-study/client/src/APIService.js"],"names":["axios","APIService","constructor","process","env","NODE_ENVIRONMENT","baseURL","signUp","email","password","url","reqBody","res","post","console","log","status","statusText","data","err","signIn","get","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,UAAN,CACf;AAGIC,EAAAA,WAAW,GACX;AACI,QAAGC,OAAO,CAACC,GAAR,CAAYC,gBAAZ,KAAiC,SAApC,EACA;AACI,WAAKC,OAAL,GAAgB,kBAAhB;AACH,KAHD,MAKA;AACI,WAAKA,OAAL,GAAe,2BAAf;AACH;AACJ;;AAEW,QAANC,MAAM,CAACC,KAAD,EAAQC,QAAR,EACZ;AACI,QACA;AACI,YAAMC,GAAG,GAAI,GAAE,KAAKJ,OAAQ,eAA5B;AAEA,YAAMK,OAAO,GACb;AACIH,QAAAA,KADJ;AAEIC,QAAAA;AAFJ,OADA;AAMA,YAAMG,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAWH,GAAX,EAAgBC,OAAhB,CAAlB;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAhB,EAAwBJ,GAAG,CAACK,UAA5B,EAAwCL,GAAG,CAACM,IAA5C;;AAEA,UAAIN,GAAG,CAACI,MAAJ,KAAe,GAAnB,EACA;AACI,eAAO,IAAP;AACH;AACJ,KAlBD,CAmBA,OAAMG,GAAN,EACA;AACI,UAAIA,GAAG,CAACP,GAAR,EACA;AACI,cAAMA,GAAG,GAAGO,GAAG,CAACP,GAAhB;AAEAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAhB,EAAwBJ,GAAG,CAACK,UAA5B,EAAwCL,GAAG,CAACM,IAA5C;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;AAGW,QAANE,MAAM,CAACZ,KAAD,EAAQC,QAAR,EACZ;AACI,QACA;AACI,YAAMC,GAAG,GAAI,GAAE,KAAKJ,OAAQ,cAA5B;AAEA,YAAMK,OAAO,GACb;AACIH,QAAAA,KADJ;AAEIC,QAAAA;AAFJ,OADA;AAMA,YAAMG,GAAG,GAAG,MAAMZ,KAAK,CAACqB,GAAN,CAAUX,GAAV,EAAe;AAAEY,QAAAA,MAAM,EAAE;AAAEd,UAAAA,KAAF;AAASC,UAAAA;AAAT;AAAV,OAAf,CAAlB;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAhB,EAAwBJ,GAAG,CAACK,UAA5B,EAAwCL,GAAG,CAACM,IAA5C;;AAEA,UAAIN,GAAG,CAACI,MAAJ,KAAe,GAAnB,EACA;AACI,eAAO,IAAP;AACH;AACJ,KAlBD,CAmBA,OAAMG,GAAN,EACA;AACI,UAAIA,GAAG,CAACP,GAAR,EACA;AACI,cAAMA,GAAG,GAAGO,GAAG,CAACP,GAAhB;AAEAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAhB,EAAwBJ,GAAG,CAACK,UAA5B,EAAwCL,GAAG,CAACM,IAA5C;AACH;AACJ;;AAED,WAAO,KAAP;AACH;;AAlFL","sourcesContent":["import axios from \"axios\";\n\nexport default class APIService \n{\n    baseURL;\n\n    constructor()\n    {\n        if(process.env.NODE_ENVIRONMENT === \"product\")\n        {\n            this.baseURL =  \"<PRODUCTION URL>\";\n        }\n        else \n        {\n            this.baseURL = \"http://localhost:5000/api\";\n        }\n    }\n\n    async signUp(email, password)\n    {\n        try\n        {\n            const url = `${this.baseURL}/auth/sign-up`;\n\n            const reqBody =\n            {\n                email, \n                password\n            };\n\n            const res = await axios.post(url, reqBody);\n\n            console.log(res.status, res.statusText, res.data);\n\n            if (res.status === 200)\n            {\n                return true;\n            }\n        }\n        catch(err)\n        {\n            if (err.res)\n            {\n                const res = err.res;\n\n                console.log(res.status, res.statusText, res.data);\n            }\n        } \n\n        return false;\n    }\n\n\n    async signIn(email, password)\n    {\n        try\n        {\n            const url = `${this.baseURL}/auth/signIn`;\n\n            const reqBody =\n            {\n                email, \n                password\n            };\n\n            const res = await axios.get(url, { params: { email, password}});\n\n            console.log(res.status, res.statusText, res.data);\n            \n            if (res.status === 200)\n            {\n                return true;\n            }\n        }\n        catch(err)\n        {\n            if (err.res)\n            {\n                const res = err.res;\n\n                console.log(res.status, res.statusText, res.data);\n            }\n        } \n\n        return false;\n    }\n}"]},"metadata":{},"sourceType":"module"}